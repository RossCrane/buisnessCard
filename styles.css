:root {
	--backgroundDark: #1e1e1e; /* Dark, almost black background */
	--booleanRed: #d19a66; /* Warm, slightly muted orange for Booleans */
	--operatorPurple: #c678dd; /* Soft purple for operators */
	--endLineGray: #7f848e; /* Medium gray for end-line characters */
	--stringGreen: #98c379; /* Soft green for strings */
	--variableBlue: #61afef; /* Bright blue for variables */
	--propertyAqua: #56b6c2; /* Aqua for properties */
	--methodYellow: #e5c07b; /* Yellow for methods */
	--functionPink: #d55fde; /* Pink for functions */
	--scopeBorder: #3f4451; /* Dark gray for scope borders */
	--scopeInnerBorder: #565c64; /* Slightly lighter gray for inner scope borders */
	--scopeInner2Border: #6c737c; /* Even lighter gray for second-level inner scope borders */
	--textColor: #abb2bf; /* Light gray for plain text */
	--commentGray: #5c6370; /* Muted gray for comments */
	--keywordOrange: #f08d49; /* Vibrant orange for keywords */
	--classYellow: #e2c08d; /* Soft yellow for classes */
	--numberBlue: #61afef; /* Blue, the same as variables, for numbers */
	--scope1: #4ec9b0; /* A vibrant teal that stands out against dark backgrounds */
	--scope2: #3baf9f; /* A slightly more subdued teal for a touch of sophistication */
	--scope3: #108b8b; /* A darker teal that offers a rich contrast without being too bright */
	--backgroundDark: #2e2e2e; /* Dark, almost black background */
	--backgroundlight: #797979; /* Light, almost white background */
	--cardFaceDark: #101010; /* Dark, almost black background */
	--cardFaceLight: #2c3e50; /* Light, almost white background */

	--monospace: 'JetBrains Mono', monospace;
}

@font-face {
	font-family: 'JetBrains Mono';
	src: url('fonts/JetBrainsMono-Light.ttf');
}

*,
*:before,
*:after {
	box-sizing: border-box;
	outline: none;
}

html {
	font-family: 'JetBrains Mono', sans-serif;
	font-size: 16px;
	-webkit-font-smoothing: antialiased;
	font-weight: 300;
	line-height: 1.5;
	color: #444;
}

body {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100%;
	height: 100vh;
	background: linear-gradient(
		45deg,
		var(--backgroundlight),
		var(--backgroundDark)
	);
}

.card {
	position: relative;
	width: 30rem;
	height: 15rem;
	perspective: 150rem;
}

.card-front,
.card-back {
	position: absolute;
	width: 100%;
	height: 100%;
	display: flex;
	align-items: center;
	justify-content: start;
	margin: auto;
	padding-left: 10px;
	border-radius: 10px;
	box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
	transition: 0.9s cubic-bezier(0.25, 0.8, 0.25, 1);
	backface-visibility: hidden;
	overflow: hidden;
}

@keyframes cardBackVisible {
	from {
		opacity: 0.99;
	}
	to {
		opacity: 1;
	}
}

.card-front {
	background: linear-gradient(45deg, var(--cardFaceDark), var(--cardFaceLight));
}

.card-back {
	background: linear-gradient(
		-45deg,
		var(--cardFaceDark),
		var(--cardFaceLight)
	);
	transform: rotateX(180deg);
}

.card:hover .card-front {
	transform: rotateX(-180deg);
}

.card:hover .card-back {
	transform: rotateX(0deg);
	animation: cardBackVisible 0.5s forwards;
}

.line-number {
	color: var(--commentGray);
}

.indent {
	white-space: pre;
}

.operator {
	color: var(--operatorPurple);
}

.boolean {
	color: var(--booleanRed);
}

.end-line {
	color: var(--endLineGray);
}

.string {
	color: var(--stringGreen);
}

.variable {
	color: var(--variableBlue);
}

.property {
	color: var(--propertyAqua);
}

.method {
	color: var(--methodYellow);
}

.function {
	color: var(--functionPink);
}

.scope {
	color: var(--scope1);
}

.scope-inner {
	color: var(--scope2);
}

.scope-inner-2 {
	color: var(--scope3);
}

.text {
	color: var(--textColor);
}

.comment {
	color: var(--commentGray);
}

.keyword {
	color: var(--keywordOrange);
}

.class {
	color: var(--classYellow);
}

.number {
	color: var(--numberBlue);
}

code > span {
	visibility: hidden;
	white-space: nowrap;
}

@keyframes typewriter {
	from {
		width: 0;
	}
	to {
		width: 100%;
	}
}

.typewriter-effect {
	visibility: visible;
	overflow: hidden;
	animation: typewriter 0.5s steps(40, end) forwards;
}
